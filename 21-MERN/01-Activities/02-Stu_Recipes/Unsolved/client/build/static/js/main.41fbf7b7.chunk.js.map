{"version":3,"sources":["components/Jumbotron/index.js","components/Nav/index.js","components/Input/index.js","components/Button/index.js","utils/API.js","components/Grid/index.js","App.js","index.js"],"names":["Jumbotron","className","target","rel","href","Nav","Input","props","type","Button","children","onClick","join","query","axios","get","params","q","Container","fluid","Row","Col","size","split","map","App","useState","setRecipes","recipeSearch","setRecipeSearch","name","value","onChange","event","placeholder","preventDefault","API","then","res","console","log","data","catch","err","ReactDOM","render","document","getElementById"],"mappings":"yPAceA,MAXf,WACE,OACE,yBAAKC,UAAU,yBACb,6CACA,uBAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAK,yCAAlD,6B,MCMSC,MAVf,WACE,OACE,yBAAKJ,UAAU,8BACb,uBAAGA,UAAU,eAAeG,KAAK,KAAjC,mBCOSE,MARf,SAAeC,GACb,OACE,yBAAKN,UAAU,8BACb,yCAAOA,UAAU,eAAeO,KAAK,QAAWD,MCGvCE,MARf,YAAqE,IAAD,IAAlDD,YAAkD,MAA3C,UAA2C,EAAhCP,EAAgC,EAAhCA,UAAWS,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QACvD,OACE,4BAAQA,QAASA,EAASV,UAAW,CAAC,aAAD,cAAsBO,GAAQP,GAAWW,KAAK,MAChFF,I,iBCFQ,EACD,SAASG,GACnB,OAAOC,IAAMC,IAAI,eAAgB,CAAEC,OAAQ,CAAEC,EAAGJ,M,MCD7C,SAASK,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,MAAOT,EAAY,EAAZA,SACjC,OAAO,yBAAKT,UAAS,mBAAckB,EAAQ,SAAW,KAAOT,GAIxD,SAASU,EAAT,GAAmC,IAApBD,EAAmB,EAAnBA,MAAOT,EAAY,EAAZA,SAC3B,OAAO,yBAAKT,UAAS,aAAQkB,EAAQ,SAAW,KAAOT,GAKlD,SAASW,EAAT,GAAkC,IAAnBC,EAAkB,EAAlBA,KAAMZ,EAAY,EAAZA,SAC1B,OACE,yBACET,UAAWqB,EACRC,MAAM,KACNC,KAAI,SAAAF,GAAI,MAAI,OAASA,KACrBV,KAAK,MAEPF,GCmDQe,MAlEf,WAEE,MAA8BC,mBAAS,IAAvC,mBAAgBC,GAAhB,WACA,EAAwCD,mBAAS,IAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAoBA,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACX,EAAD,KACE,kBAACE,EAAD,KACE,kBAACC,EAAD,CAAKC,KAAK,SACR,8BACE,kBAACJ,EAAD,KACE,kBAACE,EAAD,KACE,kBAACC,EAAD,CAAKC,KAAK,cACR,kBAAC,EAAD,CACEQ,KAAK,eACLC,MAAOH,EACPI,SAhCM,SAAAC,GAGxB,IAAQF,EAAUE,EAAM/B,OAAhB6B,MACRF,EAAgBE,IA6BEG,YAAY,yBAGhB,kBAACb,EAAD,CAAKC,KAAK,aACR,kBAAC,EAAD,CACEX,QA/BK,SAAAsB,GAEvBA,EAAME,iBACNC,EAAeR,GACZS,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIG,MAChBd,EAAWW,EAAIG,SAEhBC,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,OAwBVnC,KAAK,UACLP,UAAU,YAHZ,gBAaZ,kBAACmB,EAAD,KACE,kBAACC,EAAD,CAAKC,KAAK,SACR,wDC9DZsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.41fbf7b7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron text-center\">\n      <h1>React Recipes</h1>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.recipepuppy.com/about/api/\">\n        Powered by Recipe Puppy\n      </a>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\">\n        React Recipes\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\n\n// This component lets us use a bootstrap input element without worrying about class names\n// or manually wrapping the input with a form-group div\n// All of the props passed to this component are spread onto the input element\nfunction Input(props) {\n  return (\n    <div className=\"input-group input-group-lg\">\n      <input className=\"form-control\" type=\"text\" {...props} />\n    </div>\n  );\n}\n\nexport default Input;\n","import React from \"react\";\n\n// Destructuring the type, className, children and onClick props, applying them to the button element\nfunction Button({ type = \"default\", className, children, onClick }) {\n  return (\n    <button onClick={onClick} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import axios from \"axios\";\n\n// The getRecipes method retrieves recipes from the server\n// It accepts a \"query\" or term to search the recipe api for\nexport default {\n  getRecipes: function(query) {\n    return axios.get(\"/api/recipes\", { params: { q: query } });\n  }\n};\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Nav from \"./components/Nav\";\nimport Input from \"./components/Input\";\nimport Button from \"./components/Button\";\nimport API from \"./utils/API\";\nimport { RecipeList, RecipeListItem } from \"./components/RecipeList\";\nimport { Container, Row, Col } from \"./components/Grid\";\n\nfunction App() {\n\n  const [recipes, setRecipes] = useState([]);\n  const [recipeSearch, setRecipeSearch] = useState(\"\");\n\n  const handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { value } = event.target;\n    setRecipeSearch(value);\n  };\n\n  const handleFormSubmit = event => {\n    // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n    event.preventDefault();\n    API.getRecipes(recipeSearch)\n      .then(res => {\n        console.log(res.data)\n        setRecipes(res.data)\n      })\n      .catch(err => console.log(err));\n  };\n\n  return (\n    <div>\n      <Nav />\n      <Jumbotron />\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <form>\n              <Container>\n                <Row>\n                  <Col size=\"xs-9 sm-10\">\n                    <Input\n                      name=\"recipeSearch\"\n                      value={recipeSearch}\n                      onChange={handleInputChange}\n                      placeholder=\"Search For a Recipe\"\n                    />\n                  </Col>\n                  <Col size=\"xs-3 sm-2\">\n                    <Button\n                      onClick={handleFormSubmit}\n                      type=\"success\"\n                      className=\"input-lg\"\n                    >\n                        Search\n                    </Button>\n                  </Col>\n                </Row>\n              </Container>\n            </form>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"xs-12\">\n            <h1>Render Recipes Here</h1>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}